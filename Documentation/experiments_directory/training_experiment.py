import numpy as np
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
import joblib
from azureml.core import Run
import argparse
import os

#to get the run context of the experiment
run = Run.get_context()

data = pd.read_csv("diabetes.csv")

X,Y = data.iloc[:,1:5], data.iloc[:,-1]

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, shuffle=True)

#reg = 0.1
#taking argument from the script parameter 
parser = argparse.ArgumentParser()
parser.add_argument('--reg-rate', type=float, dest='reg_rate', default=0.01)
args = parser.parse_args()
reg = args.reg_rate

model = LogisticRegression(C = 1/reg, solver = "liblinear").fit(X_train, Y_train)

y_hat = model.predict(X_test)

acc = np.average(y_hat == Y_test)

run.log("Accuracy", np.float(acc))

os.makedirs("outputs", exist_ok=True)

joblib.dump(value = model, filename="outputs/logistic_model.pkl")


# #list of all files generated by the experiment
# for file in run.get_file_names():
#     print(file)

# # Download a named file
# run.download_file(name='outputs/model.pkl', output_file_path='model.pkl')


# #Registering the model
# from azureml.core import Model

# model = Model.register(
#                        workspace=ws,
#                        model_name='classification_model',
#                        model_path='model.pkl', # local path
#                        description='A classification model',
#                        tags={'data-format': 'CSV'},
#                        model_framework=Model.Framework.SCIKITLEARN,
#                        model_framework_version='0.20.3'
# )


run.complete()

